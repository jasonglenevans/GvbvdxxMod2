{"version":3,"file":"js/addon-entry-editor-stepping.js","sources":["webpack://GUI/./src/addons/addons/editor-stepping/_runtime_entry.js","webpack://GUI/./src/addons/addons/editor-stepping/highlighter.js","webpack://GUI/./src/addons/addons/editor-stepping/userscript.js"],"sourcesContent":["/* generated by pull.js */\nimport _js from \"./userscript.js\";\nexport const resources = {\n  \"userscript.js\": _js,\n};\n","const SVG_NS = \"http://www.w3.org/2000/svg\";\r\n\r\nconst containerSvg = document.createElementNS(SVG_NS, \"svg\");\r\n// unfortunately we can't use display: none on this as that breaks filters\r\ncontainerSvg.style.position = \"fixed\";\r\ncontainerSvg.style.top = \"-999999px\";\r\ncontainerSvg.style.width = \"0\";\r\ncontainerSvg.style.height = \"0\";\r\ndocument.body.appendChild(containerSvg);\r\n\r\nlet nextGlowerId = 0;\r\n\r\nconst highlightsPerElement = new WeakMap();\r\n\r\nconst getHighlightersForElement = (element) => {\r\n  if (!highlightsPerElement.get(element)) {\r\n    highlightsPerElement.set(element, new Set());\r\n  }\r\n  return highlightsPerElement.get(element);\r\n};\r\n\r\nconst updateHighlight = (element, highlighters) => {\r\n  let result;\r\n  for (const i of highlighters) {\r\n    if (!result || i.priority > result.priority) {\r\n      result = i;\r\n    }\r\n  }\r\n  if (result) {\r\n    element.style.filter = result.filter;\r\n  } else {\r\n    element.style.filter = \"\";\r\n  }\r\n};\r\n\r\nconst addHighlight = (element, highlighter) => {\r\n  const highlighters = getHighlightersForElement(element);\r\n  highlighters.add(highlighter);\r\n  updateHighlight(element, highlighters);\r\n};\r\n\r\nconst removeHighlight = (element, highlighter) => {\r\n  const highlighters = getHighlightersForElement(element);\r\n  highlighters.delete(highlighter);\r\n  updateHighlight(element, highlighters);\r\n};\r\n\r\nclass Highlighter {\r\n  constructor(priority, color) {\r\n    this.priority = priority;\r\n\r\n    const id = `sa_glower_filter${nextGlowerId++}`;\r\n    this.filter = `url(\"#${id}\")`;\r\n\r\n    this.previousElements = new Set();\r\n\r\n    const filterElement = document.createElementNS(SVG_NS, \"filter\");\r\n    filterElement.id = id;\r\n    filterElement.setAttribute(\"width\", \"180%\");\r\n    filterElement.setAttribute(\"height\", \"160%\");\r\n    filterElement.setAttribute(\"x\", \"-40%\");\r\n    filterElement.setAttribute(\"y\", \"-30%\");\r\n\r\n    const filterBlur = document.createElementNS(SVG_NS, \"feGaussianBlur\");\r\n    filterBlur.setAttribute(\"in\", \"SourceGraphic\");\r\n    filterBlur.setAttribute(\"stdDeviation\", \"4\");\r\n    filterElement.appendChild(filterBlur);\r\n\r\n    const filterTransfer = document.createElementNS(SVG_NS, \"feComponentTransfer\");\r\n    filterTransfer.setAttribute(\"result\", \"outBlur\");\r\n    filterElement.appendChild(filterTransfer);\r\n\r\n    const filterTransferTable = document.createElementNS(SVG_NS, \"feFuncA\");\r\n    filterTransferTable.setAttribute(\"type\", \"table\");\r\n    filterTransferTable.setAttribute(\"tableValues\", \"0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\");\r\n    filterTransfer.appendChild(filterTransferTable);\r\n\r\n    const filterFlood = document.createElementNS(SVG_NS, \"feFlood\");\r\n    filterFlood.setAttribute(\"flood-opacity\", \"1\");\r\n    filterFlood.setAttribute(\"result\", \"outColor\");\r\n    filterElement.appendChild(filterFlood);\r\n    this.filterFlood = filterFlood;\r\n\r\n    const filterComposite = document.createElementNS(SVG_NS, \"feComposite\");\r\n    filterComposite.setAttribute(\"in\", \"outColor\");\r\n    filterComposite.setAttribute(\"in2\", \"outBlur\");\r\n    filterComposite.setAttribute(\"operator\", \"in\");\r\n    filterComposite.setAttribute(\"result\", \"outGlow\");\r\n    filterElement.appendChild(filterComposite);\r\n\r\n    const filterFinalComposite = document.createElementNS(SVG_NS, \"feComposite\");\r\n    filterFinalComposite.setAttribute(\"in\", \"SourceGraphic\");\r\n    filterFinalComposite.setAttribute(\"in2\", \"outGlow\");\r\n    filterFinalComposite.setAttribute(\"operator\", \"over\");\r\n    filterElement.appendChild(filterFinalComposite);\r\n\r\n    containerSvg.appendChild(filterElement);\r\n    this.setColor(color);\r\n  }\r\n\r\n  setColor(color) {\r\n    this.filterFlood.setAttribute(\"flood-color\", color);\r\n  }\r\n\r\n  setGlowingThreads(threads) {\r\n    const elementsToHighlight = new Set();\r\n    const workspace = Blockly.getMainWorkspace();\r\n\r\n    if (workspace) {\r\n      for (const thread of threads) {\r\n        thread.stack.forEach((blockId) => {\r\n          const block = workspace.getBlockById(blockId);\r\n          if (!block) {\r\n            return;\r\n          }\r\n          const childblock = thread.stack.find((i) => {\r\n            let b = block;\r\n            while (b.childBlocks_.length) {\r\n              b = b.childBlocks_[b.childBlocks_.length - 1];\r\n              if (i === b.id) return true;\r\n            }\r\n            return false;\r\n          });\r\n          if (!childblock && block.svgPath_) {\r\n            const svgPath = block.svgPath_;\r\n            elementsToHighlight.add(svgPath);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    for (const element of this.previousElements) {\r\n      if (!elementsToHighlight.has(element)) {\r\n        removeHighlight(element, this);\r\n      }\r\n    }\r\n    for (const element of elementsToHighlight) {\r\n      if (!this.previousElements.has(element)) {\r\n        addHighlight(element, this);\r\n      }\r\n    }\r\n    this.previousElements = elementsToHighlight;\r\n  }\r\n}\r\n\r\nexport default Highlighter;\r\n","import { getRunningThread } from \"../debugger/module.js\";\r\nimport Highlighter from \"./highlighter.js\";\r\n\r\nexport default async function ({ addon, global, console }) {\r\n  const vm = addon.tab.traps.vm;\r\n\r\n  const highlighter = new Highlighter(0, addon.settings.get(\"highlight-color\"));\r\n  addon.settings.addEventListener(\"change\", () => {\r\n    highlighter.setColor(addon.settings.get(\"highlight-color\"));\r\n  });\r\n\r\n  addon.self.addEventListener(\"disabled\", () => {\r\n    highlighter.setGlowingThreads([]);\r\n  });\r\n\r\n  const oldStep = vm.runtime._step;\r\n  vm.runtime._step = function (...args) {\r\n    oldStep.call(this, ...args);\r\n    if (!addon.self.disabled) {\r\n      const runningThread = getRunningThread();\r\n      const threads = vm.runtime.threads.filter(\r\n        (thread) => thread !== runningThread && !thread.target.blocks.forceNoGlow && !thread.isCompiled\r\n      );\r\n      highlighter.setGlowingThreads(threads);\r\n    }\r\n  };\r\n}\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;;;;;;;;;;;;ACFA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAhGA;AACA;AAiGA;;;;;;;;;;;;ACjJA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;;;;A","sourceRoot":""}