{"version":3,"file":"js/addon-entry-editor-extra-keys.js","sources":["webpack://GUI/./src/addons/addons/editor-extra-keys/_runtime_entry.js","webpack://GUI/./src/addons/addons/editor-extra-keys/userscript.js"],"sourcesContent":["/* generated by pull.js */\nimport _js from \"./userscript.js\";\nexport const resources = {\n  \"userscript.js\": _js,\n};\n","export default async function ({ addon, global, cons, msg }) {\r\n  const ScratchBlocks = await addon.tab.traps.getBlockly();\r\n\r\n  let defaultKeys = null;\r\n  function appendKeys(keys, enableShiftKeys) {\r\n    if (!defaultKeys) {\r\n      defaultKeys = [...keys];\r\n    }\r\n    if (!addon.self.disabled) {\r\n      keys.push(\r\n        ...[\r\n          [\"-\", \"-\"],\r\n          [\",\", \",\"],\r\n          [\".\", \".\"],\r\n        ]\r\n      );\r\n      keys.splice(5, 0, [msg(\"enter-key\"), \"enter\"]);\r\n      if (addon.settings.get(\"experimentalKeys\")) {\r\n        keys.push(\r\n          ...[\r\n            [\"`\", \"`\"],\r\n            [\"=\", \"=\"],\r\n            [\"[\", \"[\"],\r\n            [\"]\", \"]\"],\r\n            [\"\\\\\", \"\\\\\"],\r\n            [\";\", \";\"],\r\n            [\"'\", \"'\"],\r\n            [\"/\", \"/\"],\r\n          ]\r\n        );\r\n      }\r\n      if (enableShiftKeys && addon.settings.get(\"shiftKeys\")) {\r\n        keys.push(\r\n          ...[\r\n            [\"!\", \"!\"],\r\n            [\"@\", \"@\"],\r\n            [\"#\", \"#\"],\r\n            [\"$\", \"$\"],\r\n            [\"%\", \"%\"],\r\n            [\"^\", \"^\"],\r\n            [\"&\", \"&\"],\r\n            [\"*\", \"*\"],\r\n            [\"(\", \"(\"],\r\n            [\")\", \")\"],\r\n            [\"_\", \"_\"],\r\n            [\"+\", \"+\"],\r\n            [\"{\", \"{\"],\r\n            [\"}\", \"}\"],\r\n            [\"|\", \"|\"],\r\n            [\":\", \":\"],\r\n            ['\"', '\"'],\r\n            [\"?\", \"?\"],\r\n            [\"<\", \"<\"],\r\n            [\">\", \">\"],\r\n            [\"~\", \"~\"],\r\n          ]\r\n        );\r\n      }\r\n      if (addon.settings.get(\"twKeys\")) {\r\n        keys.push(\r\n          ...[\r\n            [\"backspace\", \"backspace\"],\r\n            [\"delete\", \"delete\"],\r\n            [\"shift\", \"shift\"],\r\n            [\"caps lock\", \"caps lock\"],\r\n            [\"scroll lock\", \"scroll lock\"],\r\n            [\"control\", \"control\"],\r\n            [\"escape\", \"escape\"],\r\n            [\"insert\", \"insert\"],\r\n            [\"home\", \"home\"],\r\n            [\"end\", \"end\"],\r\n            [\"page up\", \"page up\"],\r\n            [\"page down\", \"page down\"],\r\n          ]\r\n        );\r\n      }\r\n    }\r\n    return keys;\r\n  }\r\n\r\n  for (const opcode of [\"sensing_keyoptions\", \"event_whenkeypressed\"]) {\r\n    const block = ScratchBlocks.Blocks[opcode];\r\n    const originalInit = block.init;\r\n    block.init = function (...args) {\r\n      const originalJsonInit = this.jsonInit;\r\n      this.jsonInit = function (obj) {\r\n        appendKeys(obj.args0[0].options, opcode === \"event_whenkeypressed\");\r\n        return originalJsonInit.call(this, obj);\r\n      };\r\n      return originalInit.call(this, ...args);\r\n    };\r\n  }\r\n\r\n  const updateExistingBlocks = () => {\r\n    const workspace = Blockly.getMainWorkspace();\r\n    const flyout = workspace && workspace.getFlyout();\r\n    if (workspace && flyout) {\r\n      const allBlocks = [...workspace.getAllBlocks(), ...flyout.getWorkspace().getAllBlocks()];\r\n      for (const block of allBlocks) {\r\n        if (block.type !== \"event_whenkeypressed\" && block.type !== \"sensing_keyoptions\") {\r\n          continue;\r\n        }\r\n        const input = block.inputList[0];\r\n        if (!input) {\r\n          continue;\r\n        }\r\n        const field = input.fieldRow.find((i) => i && Array.isArray(i.menuGenerator_));\r\n        if (!field) {\r\n          continue;\r\n        }\r\n        field.menuGenerator_ = appendKeys(\r\n          defaultKeys ? [...defaultKeys] : field.menuGenerator_,\r\n          block.type === \"event_whenkeypressed\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  updateExistingBlocks();\r\n  addon.settings.addEventListener(\"change\", updateExistingBlocks);\r\n  addon.self.addEventListener(\"disabled\", updateExistingBlocks);\r\n  addon.self.addEventListener(\"reenabled\", updateExistingBlocks);\r\n}\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAOA;AACA;AAAA;AACA;AAYA;AACA;AAAA;AACA;AAyBA;AACA;AAAA;AACA;AAgBA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}