{"version":3,"file":"js/addon-entry-editor-theme3.js","sources":["webpack://GUI/./src/addons/addons/editor-theme3/theme3.css","webpack://GUI/./src/addons/addons/editor-theme3/_runtime_entry.js","webpack://GUI/./src/addons/addons/editor-theme3/theme3.js","webpack://GUI/./src/addons/libraries/common/cs/text-color.esm.js"],"sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"path.blocklyBlockBackground[fill=\\\"#FF6680\\\"],\\r\\npath.blocklyBlockBackground[fill=\\\"#5CB1D6\\\"],\\r\\npath.blocklyBlockBackground[fill=\\\"#FFBF00\\\"],\\r\\npath.blocklyBlockBackground[fill=\\\"#29beb8\\\"],\\r\\ng[data-category] > path.blocklyBlockBackground {\\r\\n  stroke: #0003;\\r\\n}\\r\\ng[data-argument-type=\\\"dropdown\\\"] > path,\\r\\ng[data-argument-type=\\\"variable\\\"] > path,\\r\\npath[data-argument-type=\\\"boolean\\\"],\\r\\ng[data-shapes=\\\"c-block c-1 hat\\\"] > g[data-shapes=\\\"stack\\\"]:not(.blocklyDraggable) > path /* block preview in define block */ {\\r\\n  stroke: #0003;\\r\\n  fill: #0001;\\r\\n}\\r\\ng[data-argument-type=\\\"dropdown\\\"] > rect,\\r\\ng[data-argument-type=\\\"variable\\\"] > rect {\\r\\n  stroke: #0003;\\r\\n  fill: #0000;\\r\\n}\\r\\ng[data-argument-type*=\\\"text\\\"] > path,\\r\\n[data-category] g > line {\\r\\n  stroke: #0002;\\r\\n}\\r\\n.scratchCategoryItemBubble {\\r\\n  border-color: #0003 !important;\\r\\n}\\r\\n\\r\\n.fieldTextInput {\\r\\n  border-color: #0003 !important;\\r\\n}\\r\\n\\r\\n.blocklyBlockBackground[fill=\\\"#FFFFFF\\\"] {\\r\\n  fill: var(--editorTheme3-inputColor);\\r\\n}\\r\\n.blocklyEditableText > text {\\r\\n  fill: var(--editorTheme3-inputColor-text);\\r\\n}\\r\\n.blocklyHtmlInput {\\r\\n  background-color: var(--editorTheme3-inputColor);\\r\\n  color: var(--editorTheme3-inputColor-text);\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n","/* generated by pull.js */\nimport _js from \"./theme3.js\";\nimport _css from \"!css-loader!./theme3.css\";\nexport const resources = {\n  \"theme3.js\": _js,\n  \"theme3.css\": _css,\n};\n","import { textColor, multiply } from \"../../libraries/common/cs/text-color.esm.js\";\r\n\r\nfunction updateSettings(addon, newStyle) {\r\n  document.documentElement.style.setProperty('--editorTheme3-inputColor-text', textColor(addon.settings.get('input-color')));\r\n  var stylesheet = \"\";\r\n  const textMode = addon.settings.get(\"text\");\r\n  if (textMode === \"black\") {\r\n    stylesheet += `\r\n      .blocklyText {\r\n        fill: #575e75;\r\n      }\r\n      .blocklyDropdownText {\r\n        fill: #575e75 !important;\r\n      }\r\n      .blocklyDropDownDiv .goog-menuitem,\r\n      #s3devIDD > li {\r\n        color: #575e75;\r\n      }`;\r\n  }\r\n  if (textMode === \"colorOnWhite\") {\r\n    stylesheet += `\r\n      .blocklyDropDownDiv:not([style*=\"rgb(255, 255, 255)\"]) .goog-menuitem {\r\n        color: #575e75;\r\n      }`;\r\n  }\r\n  if (textMode === \"colorOnBlack\") {\r\n    stylesheet += `\r\n      .blocklyDropDownDiv:not([style*=\"rgb(255, 255, 255)\"]) .goog-option-selected .goog-menuitem-checkbox {\r\n        filter: brightness(0) invert(1);\r\n      }\r\n      .u-dropdown-searchbar {\r\n        border-color: rgba(255, 255, 255, 0.15);\r\n      }`;\r\n  }\r\n  var categories = {\r\n    motion: {\r\n      color: \"#4C97FF\",\r\n      tertiaryColor: \"#3373CC\",\r\n    },\r\n    looks: {\r\n      color: \"#9966FF\",\r\n      tertiaryColor: \"#774DCB\",\r\n    },\r\n    sounds: {\r\n      color: \"#CF63CF\",\r\n      tertiaryColor: \"#BD42BD\",\r\n      alt: \"sound\",\r\n    },\r\n    events: {\r\n      color: \"#DE9E2E\",\r\n      tertiaryColor: \"#CC9900\",\r\n    },\r\n    control: {\r\n      color: \"#FFBF00\",\r\n      tertiaryColor: \"#CF8B17\",\r\n    },\r\n    sensing: {\r\n      color: \"#5CB1D6\",\r\n      tertiaryColor: \"#2E8EB8\",\r\n    },\r\n    operators: {\r\n      color: \"#59C059\",\r\n      tertiaryColor: \"#389438\",\r\n    },\r\n    data: {\r\n      color: \"#FF8C1A\",\r\n      tertiaryColor: \"#DB6E00\",\r\n      alt: \"variables\",\r\n    },\r\n    \"data-lists\": {\r\n      color: \"#FF661A\",\r\n      tertiaryColor: \"#E64D00\",\r\n      alt: \"lists\",\r\n      var: \"dataLists\",\r\n    },\r\n    custom: {\r\n      color: \"#FF6680\",\r\n      tertiaryColor: \"#FF6355\",\r\n      alt: \"myBlocks\",\r\n    },\r\n    Pen: {\r\n      // For historical reasons, this is called \"Pen\".\r\n      color: \"#0FBD8C\",\r\n      tertiaryColor: \"#0B8E69\",\r\n      alt: \"pen\",\r\n    },\r\n    TurboWarp: {\r\n      color: \"#ff4c4c\",\r\n      tertiaryColor: \"#e64444\", // TODO fix\r\n      alt: \"tw\",\r\n      var: \"tw\",\r\n    },\r\n    sa: {\r\n      color: \"#29beb8\",\r\n      tertiaryColor: \"#3aa8a4\",\r\n      alt: \"a-b\",\r\n    },\r\n  };\r\n\r\n  for (var prop of Object.keys(categories)) {\r\n    var settingName = categories[prop].var ? categories[prop].var : prop;\r\n    var propNameForSettings = prop === \"TurboWarp\" ? \"tw\" : prop;\r\n    if (textMode === \"white\" || textMode === \"black\") {\r\n      let tertiary = multiply(addon.settings.get(propNameForSettings + \"-color\"), { r: 0.8, g: 0.8, b: 0.8 });\r\n      stylesheet += `g[data-category=\"${prop}\"] > path.blocklyBlockBackground {\r\n        fill: var(--editorTheme3-${settingName}Color);\r\n        ${textMode === \"black\" ? \"--sa-block-text-color: #575e75;\" : \"\"}\r\n      }\r\n      .blocklyBlockBackground[fill=\"${categories[prop].tertiaryColor}\"] /* open dropdown */ {\r\n        fill: #0003;\r\n      }\r\n      .scratchCategoryId-${categories[prop].alt ? categories[prop].alt : prop} > .scratchCategoryItemBubble {\r\n        background-color: var(--editorTheme3-${settingName}Color) !important;\r\n      }\r\n      .blocklyDropDownDiv[data-category=\"${prop}\"]:not([style*=\"rgb(255, 255, 255)\"]) {\r\n        background-color: var(--editorTheme3-${settingName}Color) !important;\r\n        border-color: #0003 !important;\r\n      }\r\n      .blocklyBubbleCanvas [stroke=\"${categories[prop].tertiaryColor}\"] {\r\n        stroke: var(--editorTheme3-${settingName}Color);\r\n      }\r\n      #s3devIDD > li.${prop} {\r\n        background-color: var(--editorTheme3-${settingName}Color);\r\n      }\r\n      #s3devIDD > li.${prop}:hover,\r\n      #s3devIDD > li.${prop}.sel {\r\n        background-color: ${tertiary};\r\n      }\r\n      .sa-debugger-block-preview[data-category=\"${prop}\"] {\r\n        background-color: var(--editorTheme3-${settingName}Color) !important;\r\n      }\r\n      `;\r\n      if (prop === \"custom\") {\r\n        stylesheet += `path.blocklyBlockBackground[fill=\"#FF6680\"] {\r\n          fill: var(--editorTheme3-${prop}Color);\r\n          ${textMode === \"black\" ? \"--sa-block-text-color: #575e75;\" : \"\"}\r\n        }\r\n        #s3devIDD > li.null {\r\n          background-color: var(--editorTheme3-${settingName}Color);\r\n        }\r\n        #s3devIDD > li.null:hover,\r\n        #s3devIDD > li.null.sel {\r\n          background-color: ${tertiary};\r\n        }`;\r\n      }\r\n      if (prop === \"sensing\") {\r\n        stylesheet += `path.blocklyBlockBackground[fill=\"#5CB1D6\"] {\r\n          fill: var(--editorTheme3-${prop}Color);\r\n          ${textMode === \"black\" ? \"--sa-block-text-color: #575e75;\" : \"\"}\r\n        }`;\r\n      }\r\n      if (prop === \"events\") {\r\n        stylesheet += `path.blocklyBlockBackground[fill=\"#FFBF00\"] {\r\n          fill: var(--editorTheme3-${prop}Color);\r\n          ${textMode === \"black\" ? \"--sa-block-text-color: #575e75;\" : \"\"}\r\n        }\r\n        .blocklyDropDownDiv[style*=\"rgb(255, 191, 0)\"] {\r\n          background-color: var(--editorTheme3-${prop}Color) !important;\r\n          border-color: #0003 !important;\r\n        }`;\r\n      }\r\n      if (prop === \"Pen\") {\r\n        stylesheet += `path.blocklyBlockBackground[fill=\"#0FBD8C\"] {\r\n          fill: var(--editorTheme3-${prop}Color);\r\n          ${textMode === \"black\" ? \"--sa-block-text-color: #575e75;\" : \"\"}\r\n        }\r\n        .blocklyDropDownDiv[style*=\"rgb(15, 189, 140)\"] {\r\n          background-color: var(--editorTheme3-${prop}Color) !important;\r\n          border-color: #0003 !important;\r\n        }\r\n        #s3devIDD > li.extension {\r\n          background-color: var(--editorTheme3-${settingName}Color);\r\n        }\r\n        #s3devIDD > li.extension:hover,\r\n        #s3devIDD > li.extension.sel {\r\n          background-color: ${tertiary};\r\n        }`;\r\n      }\r\n      if (prop === \"sa\") {\r\n        stylesheet += `path.blocklyBlockBackground[fill=\"#29beb8\"] {\r\n          fill: var(--editorTheme3-${prop}Color);\r\n          ${textMode === \"black\" ? \"--sa-block-text-color: #575e75;\" : \"\"}\r\n        }`;\r\n      }\r\n    } else {\r\n      let background = { colorOnWhite: \"#fff\", colorOnBlack: \"#282828\" }[textMode];\r\n      let inputShadow = { colorOnWhite: \"#00000026\", colorOnBlack: \"#fff3\" }[textMode];\r\n      let secondary = multiply(addon.settings.get(propNameForSettings + \"-color\"), { a: 0.15 });\r\n      let secondaryActive = multiply(addon.settings.get(propNameForSettings + \"-color\"), { a: 0.25 });\r\n      let menuText = { colorOnWhite: \"#575e75\", colorOnBlack: \"#fff\" }[textMode];\r\n      stylesheet += `g[data-category=\"${prop}\"] > path.blocklyBlockBackground,\r\n      g[data-category=\"${prop}\"] > g[data-argument-type=\"dropdown\"] > rect,\r\n      g[data-category=\"${prop}\"] > g[data-argument-type=\"variable\"] > rect {\r\n        fill: ${background};\r\n        stroke: var(--editorTheme3-${settingName}Color);\r\n        --sa-block-text-color: ${menuText};\r\n        --sa-block-secondary-color: ${secondaryActive};\r\n      }\r\n      g[data-category=\"${prop}\"] > .blocklyText,\r\n      g[data-category=\"${prop}\"] > g:not([data-id]) > .blocklyText /* variable and list reporters */ {\r\n        fill: var(--editorTheme3-${settingName}Color);\r\n      }\r\n      g[data-category=\"${prop}\"] > g[data-argument-type=\"dropdown\"] > .blocklyDropdownText,\r\n      g[data-category=\"${prop}\"] > g[data-argument-type=\"variable\"] > .blocklyDropdownText,\r\n      g[data-category=\"${prop}\"] > g[data-argument-type=\"dropdown\"] > g > .blocklyDropdownText {\r\n        fill: var(--editorTheme3-${settingName}Color) !important;\r\n      }\r\n      g[data-category=\"${prop}\"] > g[data-argument-type=\"dropdown\"] > path,\r\n      g[data-category=\"${prop}\"] > g[data-argument-type=\"variable\"] > path,\r\n      g[data-category=\"${prop}\"] > path[data-argument-type=\"boolean\"] {\r\n        fill: ${secondary};\r\n        stroke: var(--editorTheme3-${settingName}Color);\r\n      }\r\n      .blocklyBlockBackground[fill=\"${categories[prop].tertiaryColor}\"] /* open dropdown */ {\r\n        fill: ${secondaryActive} !important;\r\n      }\r\n      .scratchCategoryId-${categories[prop].alt ? categories[prop].alt : prop} > .scratchCategoryItemBubble {\r\n        background-color: var(--editorTheme3-${settingName}Color) !important;\r\n      }\r\n      .blocklyDropDownDiv[data-category=\"${prop}\"]:not([style*=\"rgb(255, 255, 255)\"]) {\r\n        background-color: ${background} !important;\r\n        border-color: var(--editorTheme3-${settingName}Color) !important;\r\n      }\r\n      .blocklyDropDownDiv[data-category=\"${prop}\"] .goog-menuitem-highlight {\r\n        background-color: ${secondaryActive};\r\n      }\r\n      .blocklyBubbleCanvas [stroke=\"${categories[prop].tertiaryColor}\"],\r\n      g[data-category=${prop}] > g[data-argument-type*=\"text\"] > path,\r\n      g[data-category=${prop}] > g > line  {\r\n        stroke: var(--editorTheme3-${settingName}Color);\r\n      }\r\n      .blocklyWidgetDiv.fieldTextInput[style*=\"box-shadow\"] {\r\n        box-shadow: 0 0 0 4px ${inputShadow} !important;\r\n      }\r\n      #s3devIDD > li.${prop} {\r\n        background-color: ${secondary};\r\n        color: var(--editorTheme3-${settingName}Color);\r\n      }\r\n      #s3devIDD > li.${prop}:hover,\r\n      #s3devIDD > li.${prop}.sel {\r\n        background-color: ${secondaryActive};\r\n      }`;\r\n      if (prop === \"custom\") {\r\n        stylesheet += `path.blocklyBlockBackground[fill=\"#FF6680\"] {\r\n          fill: ${background};\r\n          stroke: var(--editorTheme3-${prop}Color);\r\n          --sa-block-text-color: ${menuText};\r\n          --sa-block-secondary-color: ${secondaryActive};\r\n        }\r\n        path.blocklyBlockBackground[fill=\"#FF6680\"] ~ .blocklyText,\r\n        g[data-shapes=\"c-block c-1 hat\"] > g[data-shapes=\"stack\"]:not(.blocklyDraggable) > .blocklyText,\r\n        .blocklyEditableText > rect[fill=\"#FF3355\"] ~ .blocklyText {\r\n          fill: var(--editorTheme3-${prop}Color);\r\n        }\r\n        path.blocklyBlockBackground[fill=\"#FF6680\"] ~ [data-argument-type=\"text\"] > path {\r\n          stroke: var(--editorTheme3-${prop}Color);\r\n        }\r\n        g[data-shapes=\"c-block c-1 hat\"] > g[data-shapes=\"stack\"]:not(.blocklyDraggable) > path,\r\n        path[data-argument-type=\"boolean\"][fill=\"#FF3355\"] {\r\n          fill: ${secondary};\r\n          stroke: var(--editorTheme3-${prop}Color);\r\n        }\r\n        .blocklyEditableText > rect[fill=\"#FF3355\"] {\r\n          fill: ${secondary};\r\n        }\r\n        #s3devIDD > li.null {\r\n          background-color: ${secondary};\r\n          color: var(--editorTheme3-${settingName}Color);\r\n        }\r\n        #s3devIDD > li.null:hover,\r\n        #s3devIDD > li.null.sel {\r\n          background-color: ${secondaryActive};\r\n        }`;\r\n      }\r\n      if (prop === \"sensing\") {\r\n        stylesheet += `path.blocklyBlockBackground[fill=\"#5CB1D6\"],\r\n        g[data-argument-type=\"dropdown\"] > rect[fill=\"#5CB1D6\"] {\r\n          fill: ${background};\r\n          stroke: var(--editorTheme3-${prop}Color);\r\n          --sa-block-text-color: ${menuText};\r\n          --sa-block-secondary-color: ${secondaryActive};\r\n        }\r\n        g[data-argument-type=\"dropdown\"] > path[fill=\"#47A8D1\"] {\r\n          fill: ${secondary};\r\n          stroke: var(--editorTheme3-${prop}Color);\r\n        }\r\n        path.blocklyBlockBackground[fill=\"#5CB1D6\"] ~ .blocklyText {\r\n          fill: var(--editorTheme3-${prop}Color);\r\n        }\r\n        g[data-argument-type=\"dropdown\"] > rect[fill=\"#5CB1D6\"] ~ .blocklyText,\r\n        g[data-argument-type=\"dropdown\"] > rect[fill=\"#2E8EB8\"] ~ .blocklyText,\r\n        g[data-argument-type=\"dropdown\"] > path[fill=\"#47A8D1\"] ~ * > .blocklyText,\r\n        g[data-argument-type=\"dropdown\"] > path[fill=\"#2E8EB8\"] ~ * > .blocklyText {\r\n          fill: var(--editorTheme3-${prop}Color) !important;\r\n        }\r\n        .blocklyDropDownDiv[style*=\"rgb(92, 177, 214)\"] {\r\n          background-color: ${background} !important;\r\n          border-color: var(--editorTheme3-${settingName}Color) !important;\r\n        }\r\n        .blocklyDropDownDiv[style*=\"rgb(92, 177, 214)\"] .goog-menuitem-highlight {\r\n          background-color: ${secondaryActive};\r\n        }`;\r\n      }\r\n      if (prop === \"events\") {\r\n        stylesheet += `path.blocklyBlockBackground[fill=\"#FFBF00\"],\r\n        g[data-argument-type=\"dropdown\"] > rect[fill=\"#FFBF00\"],\r\n        g[data-argument-type=\"dropdown\"] > rect[fill=\"#CC9900\"] {\r\n          fill: ${background};\r\n          stroke: var(--editorTheme3-${settingName}Color);\r\n          --sa-block-text-color: ${menuText};\r\n          --sa-block-secondary-color: ${secondaryActive};\r\n        }\r\n        path.blocklyBlockBackground[fill=\"#FFBF00\"] ~ .blocklyText {\r\n          fill: var(--editorTheme3-${prop}Color);\r\n        }\r\n        path.blocklyBlockBackground[fill=\"#FFBF00\"] ~ g[data-argument-type=\"variable\"] > g > .blocklyDropdownText {\r\n          fill: var(--editorTheme3-${prop}Color) !important;\r\n        }\r\n        g[data-argument-type=\"dropdown\"] > rect[fill=\"#FFBF00\"] ~ .blocklyText,\r\n        g[data-argument-type=\"dropdown\"] > rect[fill=\"#CC9900\"] ~ .blocklyText {\r\n          fill: var(--editorTheme3-${prop}Color) !important;\r\n        }\r\n        .blocklyDropDownDiv[style*=\"rgb(255, 191, 0)\"] {\r\n          background-color: ${background} !important;\r\n          border-color: var(--editorTheme3-${settingName}Color) !important;\r\n        }\r\n        .blocklyDropDownDiv[style*=\"rgb(255, 191, 0)\"] .goog-menuitem-highlight {\r\n          background-color: ${secondaryActive};\r\n        }`;\r\n      }\r\n      if (prop === \"Pen\") {\r\n        stylesheet += `g[data-category] /* specificity */ > path.blocklyBlockBackground[fill=\"#0FBD8C\"] {\r\n          fill: ${background};\r\n          stroke: var(--editorTheme3-${prop}Color);\r\n          --sa-block-text-color: ${menuText};\r\n          --sa-block-secondary-color: ${secondaryActive};\r\n        }\r\n        path.blocklyBlockBackground[fill=\"#0FBD8C\"] ~ .blocklyText {\r\n          fill: var(--editorTheme3-${prop}Color);\r\n        }\r\n        path.blocklyBlockBackground[fill=\"#0FBD8C\"] ~ g[data-argument-type=\"dropdown\"] > g > .blocklyDropdownText {\r\n          fill: var(--editorTheme3-${prop}Color) !important;\r\n        }\r\n        g[data-argument-type=\"dropdown\"] > path[fill=\"#0DA57A\"] {\r\n          fill: ${secondary};\r\n          stroke: var(--editorTheme3-${prop}Color);\r\n        }\r\n        .blocklyDropDownDiv[style*=\"rgb(15, 189, 140)\"] {\r\n          background-color: ${background} !important;\r\n          border-color: var(--editorTheme3-${settingName}Color) !important;\r\n        }\r\n        .blocklyDropDownDiv[style*=\"rgb(15, 189, 140)\"] .goog-menuitem-highlight {\r\n          background-color: ${secondaryActive};\r\n        }\r\n        path.blocklyBlockBackground[fill=\"#0FBD8C\"] ~ [data-argument-type=\"text\"] > path,\r\n        path.blocklyBlockBackground[fill=\"#0FBD8C\"] ~ g > line  {\r\n          stroke: var(--editorTheme3-${prop}Color);\r\n        }\r\n        #s3devIDD > li.extension {\r\n          background-color: ${secondary};\r\n          color: var(--editorTheme3-${settingName}Color);\r\n        }\r\n        #s3devIDD > li.extension:hover,\r\n        #s3devIDD > li.extension.sel {\r\n          background-color: ${secondaryActive};\r\n        }`;\r\n      }\r\n      if (prop === \"sa\") {\r\n        stylesheet += `path.blocklyBlockBackground[fill=\"#29beb8\"] {\r\n          fill: ${background};\r\n          stroke: var(--editorTheme3-${prop}Color);\r\n          --sa-block-text-color: ${menuText};\r\n          --sa-block-secondary-color: ${secondaryActive};\r\n        }\r\n        path.blocklyBlockBackground[fill=\"#29beb8\"] ~ .blocklyText {\r\n          fill: var(--editorTheme3-${prop}Color);\r\n        }\r\n        path.blocklyBlockBackground[fill=\"#29beb8\"] ~ [data-argument-type=\"text\"] > path {\r\n          stroke: var(--editorTheme3-${prop}Color);\r\n        }`;\r\n      }\r\n    }\r\n  }\r\n\r\n  document.documentElement.style.setProperty(\r\n    \"--editorTheme3-inputColor-text\",\r\n    textColor(addon.settings.get(\"input-color\"))\r\n  );\r\n  newStyle.textContent = stylesheet;\r\n}\r\n\r\nexport default async function ({ addon, global, console }) {\r\n  const otherStyle = document.querySelector(`[data-addon-id='${addon.self.id}']`);\r\n  const newStyle = document.createElement(\"style\");\r\n  updateSettings(addon, newStyle);\r\n  addon.settings.addEventListener(\"change\", () => {\r\n    updateSettings(addon, newStyle);\r\n  });\r\n  newStyle.className = \"scratch-addons-style\";\r\n  newStyle.setAttribute(\"data-addon-id\", addon.self.id);\r\n  newStyle.setAttribute(\"data-addon-index\", otherStyle.getAttribute(\"data-addon-index\"));\r\n\r\n  otherStyle.parentElement.insertBefore(newStyle, otherStyle.nextSibling);\r\n\r\n  // Look for reenable event to enable the style. cs.js cannot handle an appended style.\r\n  addon.self.addEventListener(\"reenabled\", () => (newStyle.disabled = false));\r\n}\r\n","function parseHex(hex) {\r\n  return {\r\n    r: parseInt(hex.substring(1, 3), 16),\r\n    g: parseInt(hex.substring(3, 5), 16),\r\n    b: parseInt(hex.substring(5, 7), 16),\r\n    a: hex.length >= 9 ? parseInt(hex.substring(7, 9), 16) / 255 : 1,\r\n  };\r\n}\r\n\r\nfunction convertComponentToHex(a) {\r\n  a = Math.round(a).toString(16);\r\n  if (a.length === 1) return `0${a}`;\r\n  return a;\r\n}\r\n\r\nfunction convertToHex(obj) {\r\n  const r = convertComponentToHex(obj.r);\r\n  const g = convertComponentToHex(obj.g);\r\n  const b = convertComponentToHex(obj.b);\r\n  const a = obj.a !== undefined ? convertComponentToHex(255 * obj.a) : \"\";\r\n  return `#${r}${g}${b}${a}`;\r\n}\r\n\r\nfunction convertFromHsv({ h, s, v }) {\r\n  if (s === 0) return { r: 255 * v, g: 255 * v, b: 255 * v };\r\n  const h1 = h / 60;\r\n  const hi = Math.floor(h1);\r\n  const x = v * (1 - s * (1 - h1 + hi));\r\n  const y = v * (1 - s * (h1 - hi));\r\n  const z = v * (1 - s);\r\n  switch (hi) {\r\n    case 0:\r\n      return { r: 255 * v, g: 255 * x, b: 255 * z };\r\n    case 1:\r\n      return { r: 255 * y, g: 255 * v, b: 255 * z };\r\n    case 2:\r\n      return { r: 255 * z, g: 255 * v, b: 255 * x };\r\n    case 3:\r\n      return { r: 255 * z, g: 255 * y, b: 255 * v };\r\n    case 4:\r\n      return { r: 255 * x, g: 255 * z, b: 255 * v };\r\n    case 5:\r\n      return { r: 255 * v, g: 255 * z, b: 255 * y };\r\n    default:\r\n      // ???\r\n      return { r: 0, g: 0, b: 0 };\r\n  }\r\n}\r\n\r\nfunction convertToHsv({ r, g, b }) {\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n  const v = Math.max(r, g, b);\r\n  const d = v - Math.min(r, g, b);\r\n  if (d === 0) return { h: 0, s: 0, v: v }; // gray\r\n  const s = d / v;\r\n  const hr = (v - r) / d;\r\n  const hg = (v - g) / d;\r\n  const hb = (v - b) / d;\r\n  let h1;\r\n  if (!hr) h1 = hb - hg;\r\n  else if (!hg) h1 = 2 + hr - hb;\r\n  else if (!hb) h1 = 4 + hg - hr;\r\n  const h = (60 * h1) % 360;\r\n  return { h, s, v };\r\n}\r\n\r\nfunction brightness(hex) {\r\n  const { r, g, b } = parseHex(hex);\r\n  return r * 0.299 + g * 0.587 + b * 0.114;\r\n}\r\n\r\nfunction textColor(hex, black, white, threshold) {\r\n  threshold = threshold !== undefined ? threshold : 170;\r\n  if (typeof threshold !== \"number\") threshold = brightness(threshold);\r\n  if (brightness(hex) > threshold) {\r\n    // https://stackoverflow.com/a/3943023\r\n    return black !== undefined ? black : \"#575e75\";\r\n  } else {\r\n    return white !== undefined ? white : \"#ffffff\";\r\n  }\r\n}\r\n\r\nfunction multiply(hex, c) {\r\n  const { r, g, b, a } = parseHex(hex);\r\n  if (c.r === undefined) c.r = 1;\r\n  if (c.g === undefined) c.g = 1;\r\n  if (c.b === undefined) c.b = 1;\r\n  if (c.a === undefined) c.a = 1;\r\n  return convertToHex({ r: c.r * r, g: c.g * g, b: c.b * b, a: c.a * a });\r\n}\r\n\r\nfunction brighten(hex, c) {\r\n  const { r, g, b, a } = parseHex(hex);\r\n  if (c.r === undefined) c.r = 1;\r\n  if (c.g === undefined) c.g = 1;\r\n  if (c.b === undefined) c.b = 1;\r\n  if (c.a === undefined) c.a = 1;\r\n  return convertToHex({\r\n    r: (1 - c.r) * 255 + c.r * r,\r\n    g: (1 - c.g) * 255 + c.g * g,\r\n    b: (1 - c.b) * 255 + c.b * b,\r\n    a: 1 - c.a + c.a * a,\r\n  });\r\n}\r\n\r\nfunction alphaBlend(opaqueHex, transparentHex) {\r\n  const { r: r1, g: g1, b: b1 } = parseHex(opaqueHex);\r\n  const { r: r2, g: g2, b: b2, a } = parseHex(transparentHex);\r\n  return convertToHex({\r\n    r: (1 - a) * r1 + a * r2,\r\n    g: (1 - a) * g1 + a * g2,\r\n    b: (1 - a) * b1 + a * b2,\r\n  });\r\n}\r\n\r\nfunction makeHsv(hSource, sSource, vSource) {\r\n  const h = typeof hSource === \"number\" ? hSource : convertToHsv(parseHex(hSource)).h;\r\n  const s =\r\n    typeof hSource !== \"number\" && convertToHsv(parseHex(hSource)).s === 0\r\n      ? 0\r\n      : typeof sSource === \"number\"\r\n      ? sSource\r\n      : convertToHsv(parseHex(sSource)).s;\r\n  const v = typeof vSource === \"number\" ? vSource : convertToHsv(parseHex(vSource)).v;\r\n  return convertToHex(convertFromHsv({ h, s, v }));\r\n}\r\n\r\nfunction recolorFilter(hex) {\r\n  const { r, g, b } = parseHex(hex);\r\n  return `url(\"data:image/svg+xml,\r\n    <svg xmlns='http://www.w3.org/2000/svg'>\r\n      <filter id='recolor'>\r\n        <feColorMatrix values='\r\n          0 0 0 0 ${r / 255}\r\n          0 0 0 0 ${g / 255}\r\n          0 0 0 0 ${b / 255}\r\n          0 0 0 1 0\r\n        '/>\r\n      </filter>\r\n    </svg>#recolor\r\n  \")`\r\n    .split(\"\\n\")\r\n    .join(\"\");\r\n}\r\n\r\nexport {\r\n  parseHex,\r\n  convertToHex,\r\n  convertFromHsv,\r\n  convertToHsv,\r\n  brightness,\r\n  textColor,\r\n  multiply,\r\n  brighten,\r\n  alphaBlend,\r\n  makeHsv,\r\n  recolorFilter,\r\n};\r\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;;;;;;;;;;;;ACHA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAWA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAOA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AA1DA;AACA;AAgEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AA2BA;AACA;AAWA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAQA;AACA;AAAA;AACA;AAeA;AACA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAmDA;AACA;AA8BA;AACA;AAAA;AACA;AA2BA;AACA;AAAA;AACA;AAyBA;AACA;AAAA;AACA;AAmCA;AACA;AAAA;AACA;AAYA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;;;;;;;;;;;ACtfA;AAicA;AACA;;;;;A","sourceRoot":""}