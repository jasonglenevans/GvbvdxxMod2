{"version":3,"file":"js/addon-entry-mediarecorder.js","sources":["webpack://GUI/./src/addons/addons/mediarecorder/style.css","webpack://GUI/./src/addons/addons/mediarecorder/_runtime_entry.js","webpack://GUI/./src/addons/addons/mediarecorder/userscript.js","webpack://GUI/./src/addons/libraries/common/cs/download-blob.js"],"sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".mediaRecorderPopup {\\r\\n  box-sizing: border-box;\\r\\n  width: 700px;\\r\\n  max-height: min(800px, 80vh);\\r\\n  max-width: 85%;\\r\\n  margin-top: 12vh;\\r\\n  overflow-y: auto;\\r\\n  margin-left: auto;\\r\\n  margin-right: auto;\\r\\n}\\r\\n\\r\\n.mediaRecorderPopup [class*=\\\"modal_header-item-title\\\"] {\\r\\n  margin: 0; /* required because there is no close button */\\r\\n}\\r\\n\\r\\n.mediaRecorderPopupContent {\\r\\n  background-color: white;\\r\\n  padding: 1.5rem 2.25rem;\\r\\n}\\r\\n[theme=\\\"dark\\\"] .mediaRecorderPopupContent {\\r\\n  color: var(--text-primary);\\r\\n  background-color: var(--ui-primary);\\r\\n}\\r\\n\\r\\n.mediaRecorderPopup p {\\r\\n  font-size: 1rem;\\r\\n  margin: 1rem auto;\\r\\n}\\r\\n\\r\\n.mediaRecorderPopup p :last-child {\\r\\n  margin-left: 1rem;\\r\\n}\\r\\n\\r\\n.mediaRecorderPopup[dir=\\\"rtl\\\"] p :last-child {\\r\\n  margin-left: 0;\\r\\n  margin-right: 1rem;\\r\\n}\\r\\n\\r\\n#recordOptionSecondsInput,\\r\\n#recordOptionDelayInput {\\r\\n  width: 6rem;\\r\\n}\\r\\n\\r\\n.mediaRecorderPopupButtons {\\r\\n  margin-top: 1.5rem;\\r\\n}\\r\\n\\r\\n.mediaRecorderPopupButtons button {\\r\\n  margin-left: 0.5rem;\\r\\n}\\r\\n\\r\\n.mediaRecorderPopupButtons button:nth-of-type(1) {\\r\\n  color: black;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n","/* generated by pull.js */\nimport _js from \"./userscript.js\";\nimport _css from \"!css-loader!./style.css\";\nexport const resources = {\n  \"userscript.js\": _js,\n  \"style.css\": _css,\n};\n","import downloadBlob from \"../../libraries/common/cs/download-blob.js\";\r\n\r\nexport default async ({ addon, console, msg }) => {\r\n  let recordElem;\r\n  let isRecording = false;\r\n  let isWaitingForFlag = false;\r\n  let waitingForFlagFunc = null;\r\n  let abortController = null;\r\n  let stopSignFunc = null;\r\n  let recordBuffer = [];\r\n  let recorder;\r\n  let timeout;\r\n  while (true) {\r\n    const elem = await addon.tab.waitForElement('div[class*=\"menu-bar_file-group\"] > div:last-child:not(.sa-record)', {\r\n      markAsSeen: true,\r\n      reduxEvents: [\"scratch-gui/mode/SET_PLAYER\", \"fontsLoaded/SET_FONTS_LOADED\", \"scratch-gui/locales/SELECT_LOCALE\"],\r\n    });\r\n    const getOptions = () => {\r\n      const recordOption = Object.assign(document.createElement(\"div\"), {\r\n        className: addon.tab.scratchClass(\"modal_modal-overlay\"),\r\n      });\r\n      const recordOptionPopup = Object.assign(document.createElement(\"div\"), {\r\n        className: addon.tab.scratchClass(\"modal_modal-content\", { others: \"mediaRecorderPopup\" }),\r\n        dir: addon.tab.direction,\r\n      });\r\n      const recordOptionHeader = Object.assign(document.createElement(\"div\"), {\r\n        className: addon.tab.scratchClass(\"modal_header\"),\r\n      });\r\n      recordOptionHeader.appendChild(\r\n        Object.assign(document.createElement(\"div\"), {\r\n          className: addon.tab.scratchClass(\"modal_header-item\", \"modal_header-item-title\"),\r\n          textContent: msg(\"option-title\"),\r\n        })\r\n      );\r\n      recordOptionPopup.appendChild(recordOptionHeader);\r\n      const recordOptionInner = Object.assign(document.createElement(\"div\"), {\r\n        className: \"mediaRecorderPopupContent\",\r\n      });\r\n\r\n      recordOptionInner.appendChild(\r\n        Object.assign(document.createElement(\"p\"), {\r\n          textContent: msg(\"record-description\"),\r\n          className: \"recordOptionDescription\",\r\n        })\r\n      );\r\n\r\n      // Seconds\r\n      const recordOptionSeconds = document.createElement(\"p\");\r\n      const recordOptionSecondsInput = Object.assign(document.createElement(\"input\"), {\r\n        type: \"number\",\r\n        min: 1,\r\n        max: 300,\r\n        defaultValue: 30,\r\n        id: \"recordOptionSecondsInput\",\r\n        className: addon.tab.scratchClass(\"prompt_variable-name-text-input\"),\r\n      });\r\n      const recordOptionSecondsLabel = Object.assign(document.createElement(\"label\"), {\r\n        htmlFor: \"recordOptionSecondsInput\",\r\n        textContent: msg(\"record-duration\"),\r\n      });\r\n      recordOptionSeconds.appendChild(recordOptionSecondsLabel);\r\n      recordOptionSeconds.appendChild(recordOptionSecondsInput);\r\n      recordOptionInner.appendChild(recordOptionSeconds);\r\n\r\n      // Delay\r\n      const recordOptionDelay = document.createElement(\"p\");\r\n      const recordOptionDelayInput = Object.assign(document.createElement(\"input\"), {\r\n        type: \"number\",\r\n        min: 0,\r\n        max: 300,\r\n        defaultValue: 0,\r\n        id: \"recordOptionDelayInput\",\r\n        className: addon.tab.scratchClass(\"prompt_variable-name-text-input\"),\r\n      });\r\n      const recordOptionDelayLabel = Object.assign(document.createElement(\"label\"), {\r\n        htmlFor: \"recordOptionDelayInput\",\r\n        textContent: msg(\"start-delay\"),\r\n      });\r\n      recordOptionDelay.appendChild(recordOptionDelayLabel);\r\n      recordOptionDelay.appendChild(recordOptionDelayInput);\r\n      recordOptionInner.appendChild(recordOptionDelay);\r\n\r\n      // Audio\r\n      const recordOptionAudio = document.createElement(\"p\");\r\n      const recordOptionAudioInput = Object.assign(document.createElement(\"input\"), {\r\n        type: \"checkbox\",\r\n        defaultChecked: true,\r\n        id: \"recordOptionAudioInput\",\r\n      });\r\n      const recordOptionAudioLabel = Object.assign(document.createElement(\"label\"), {\r\n        htmlFor: \"recordOptionAudioInput\",\r\n        textContent: msg(\"record-audio\"),\r\n        title: msg(\"record-audio-description\"),\r\n      });\r\n      recordOptionAudio.appendChild(recordOptionAudioInput);\r\n      recordOptionAudio.appendChild(recordOptionAudioLabel);\r\n      recordOptionInner.appendChild(recordOptionAudio);\r\n\r\n      // Mic\r\n      const recordOptionMic = document.createElement(\"p\");\r\n      const recordOptionMicInput = Object.assign(document.createElement(\"input\"), {\r\n        type: \"checkbox\",\r\n        defaultChecked: false,\r\n        id: \"recordOptionMicInput\",\r\n      });\r\n      const recordOptionMicLabel = Object.assign(document.createElement(\"label\"), {\r\n        htmlFor: \"recordOptionMicInput\",\r\n        textContent: msg(\"record-mic\"),\r\n      });\r\n      recordOptionMic.appendChild(recordOptionMicInput);\r\n      recordOptionMic.appendChild(recordOptionMicLabel);\r\n      recordOptionInner.appendChild(recordOptionMic);\r\n\r\n      // Green flag\r\n      const recordOptionFlag = document.createElement(\"p\");\r\n      const recordOptionFlagInput = Object.assign(document.createElement(\"input\"), {\r\n        type: \"checkbox\",\r\n        defaultChecked: true,\r\n        id: \"recordOptionFlagInput\",\r\n      });\r\n      const recordOptionFlagLabel = Object.assign(document.createElement(\"label\"), {\r\n        htmlFor: \"recordOptionFlagInput\",\r\n        textContent: msg(\"record-after-flag\"),\r\n      });\r\n      recordOptionFlag.appendChild(recordOptionFlagInput);\r\n      recordOptionFlag.appendChild(recordOptionFlagLabel);\r\n      recordOptionInner.appendChild(recordOptionFlag);\r\n\r\n      // Stop sign\r\n      const recordOptionStop = document.createElement(\"p\");\r\n      const recordOptionStopInput = Object.assign(document.createElement(\"input\"), {\r\n        type: \"checkbox\",\r\n        defaultChecked: true,\r\n        id: \"recordOptionStopInput\",\r\n      });\r\n      const recordOptionStopLabel = Object.assign(document.createElement(\"label\"), {\r\n        htmlFor: \"recordOptionStopInput\",\r\n        textContent: msg(\"record-until-stop\"),\r\n      });\r\n      recordOptionFlagInput.addEventListener(\"change\", () => {\r\n        const disabled = (recordOptionStopInput.disabled = !recordOptionFlagInput.checked);\r\n        if (disabled) {\r\n          recordOptionStopLabel.title = msg(\"record-until-stop-disabled\", {\r\n            afterFlagOption: msg(\"record-after-flag\"),\r\n          });\r\n        }\r\n      });\r\n      recordOptionStop.appendChild(recordOptionStopInput);\r\n      recordOptionStop.appendChild(recordOptionStopLabel);\r\n      recordOptionInner.appendChild(recordOptionStop);\r\n\r\n      let resolvePromise = null;\r\n      const optionPromise = new Promise((resolve) => {\r\n        resolvePromise = resolve;\r\n      });\r\n      let handleOptionClose = null;\r\n\r\n      const handleClickOutside = (e) => {\r\n        if (recordOptionPopup.contains(e.target)) return;\r\n        handleOptionClose(null);\r\n      };\r\n\r\n      document.body.addEventListener(\"click\", handleClickOutside, {\r\n        capture: true,\r\n      });\r\n\r\n      handleOptionClose = (value) => {\r\n        resolvePromise(value);\r\n        document.body.removeEventListener(\"click\", handleClickOutside, {\r\n          capture: true,\r\n        });\r\n        recordOption.remove();\r\n      };\r\n\r\n      const buttonRow = Object.assign(document.createElement(\"div\"), {\r\n        className: addon.tab.scratchClass(\"prompt_button-row\", { others: \"mediaRecorderPopupButtons\" }),\r\n      });\r\n      const cancelButton = Object.assign(document.createElement(\"button\"), {\r\n        textContent: msg(\"cancel\"),\r\n      });\r\n      cancelButton.addEventListener(\"click\", () => handleOptionClose(null), { once: true });\r\n      buttonRow.appendChild(cancelButton);\r\n      const startButton = Object.assign(document.createElement(\"button\"), {\r\n        textContent: msg(\"start\"),\r\n        className: addon.tab.scratchClass(\"prompt_ok-button\"),\r\n      });\r\n      startButton.addEventListener(\r\n        \"click\",\r\n        () =>\r\n          handleOptionClose({\r\n            secs: Number(recordOptionSecondsInput.value),\r\n            delay: Number(recordOptionDelayInput.value),\r\n            audioEnabled: recordOptionAudioInput.checked,\r\n            micEnabled: recordOptionMicInput.checked,\r\n            waitUntilFlag: recordOptionFlagInput.checked,\r\n            useStopSign: !recordOptionStopInput.disabled && recordOptionStopInput.checked,\r\n          }),\r\n        { once: true }\r\n      );\r\n      buttonRow.appendChild(startButton);\r\n      recordOptionInner.appendChild(buttonRow);\r\n\r\n      recordOptionPopup.appendChild(recordOptionInner);\r\n      recordOption.appendChild(recordOptionPopup);\r\n      document.body.appendChild(recordOption);\r\n\r\n      return optionPromise;\r\n    };\r\n    const disposeRecorder = () => {\r\n      isRecording = false;\r\n      recordElem.textContent = msg(\"record\");\r\n      recordElem.title = \"\";\r\n      recorder = null;\r\n      recordBuffer = [];\r\n      clearTimeout(timeout);\r\n      timeout = 0;\r\n      if (stopSignFunc) {\r\n        addon.tab.traps.vm.runtime.off(\"PROJECT_STOP_ALL\", stopSignFunc);\r\n        stopSignFunc = null;\r\n      }\r\n    };\r\n    const stopRecording = (force) => {\r\n      if (isWaitingForFlag) {\r\n        addon.tab.traps.vm.runtime.off(\"PROJECT_START\", waitingForFlagFunc);\r\n        isWaitingForFlag = false;\r\n        waitingForFlagFunc = null;\r\n        abortController.abort();\r\n        abortController = null;\r\n        disposeRecorder();\r\n        return;\r\n      }\r\n      if (!isRecording || !recorder || recorder.state === \"inactive\") return;\r\n      if (force) {\r\n        disposeRecorder();\r\n      } else {\r\n        recorder.onstop = () => {\r\n          const blob = new Blob(recordBuffer, { type: \"video/webm\" });\r\n          downloadBlob(\"video.webm\", blob);\r\n          disposeRecorder();\r\n        };\r\n        recorder.stop();\r\n      }\r\n    };\r\n    const startRecording = async (opts) => {\r\n      // Timer\r\n      const secs = Math.min(300, Math.max(1, opts.secs));\r\n\r\n      // Initialize MediaRecorder\r\n      recordBuffer = [];\r\n      isRecording = true;\r\n      const vm = addon.tab.traps.vm;\r\n      let micStream;\r\n      if (opts.micEnabled) {\r\n        // Show permission dialog before green flag is clicked\r\n        try {\r\n          micStream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n        } catch (e) {\r\n          if (e.name !== \"NotAllowedError\" && e.name !== \"NotFoundError\") throw e;\r\n          opts.micEnabled = false;\r\n        }\r\n      }\r\n      if (opts.waitUntilFlag) {\r\n        isWaitingForFlag = true;\r\n        Object.assign(recordElem, {\r\n          textContent: msg(\"click-flag\"),\r\n          title: msg(\"click-flag-description\"),\r\n        });\r\n        abortController = new AbortController();\r\n        try {\r\n          await Promise.race([\r\n            new Promise((resolve) => {\r\n              waitingForFlagFunc = () => resolve();\r\n              vm.runtime.once(\"PROJECT_START\", waitingForFlagFunc);\r\n            }),\r\n            new Promise((_, reject) => {\r\n              abortController.signal.addEventListener(\"abort\", () => reject(\"aborted\"), { once: true });\r\n            }),\r\n          ]);\r\n        } catch (e) {\r\n          if (e.message === \"aborted\") return;\r\n          throw e;\r\n        }\r\n      }\r\n      isWaitingForFlag = false;\r\n      waitingForFlagFunc = abortController = null;\r\n      const stream = new MediaStream();\r\n      const videoStream = vm.runtime.renderer.canvas.captureStream();\r\n      stream.addTrack(videoStream.getVideoTracks()[0]);\r\n\r\n      const ctx = new AudioContext();\r\n      const dest = ctx.createMediaStreamDestination();\r\n      if (opts.audioEnabled) {\r\n        const mediaStreamDestination = vm.runtime.audioEngine.audioContext.createMediaStreamDestination();\r\n        vm.runtime.audioEngine.inputNode.connect(mediaStreamDestination);\r\n        const audioSource = ctx.createMediaStreamSource(mediaStreamDestination.stream);\r\n        audioSource.connect(dest);\r\n      }\r\n      if (opts.micEnabled) {\r\n        const micSource = ctx.createMediaStreamSource(micStream);\r\n        micSource.connect(dest);\r\n      }\r\n      if (opts.audioEnabled || opts.micEnabled) {\r\n        stream.addTrack(dest.stream.getAudioTracks()[0]);\r\n      }\r\n      recorder = new MediaRecorder(stream, { mimeType: \"video/webm\" });\r\n      recorder.ondataavailable = (e) => {\r\n        recordBuffer.push(e.data);\r\n      };\r\n      recorder.onerror = (e) => {\r\n        console.warn(\"Recorder error:\", e.error);\r\n        stopRecording(true);\r\n      };\r\n      timeout = setTimeout(() => stopRecording(false), secs * 1000);\r\n      if (opts.useStopSign) {\r\n        stopSignFunc = () => stopRecording();\r\n        vm.runtime.once(\"PROJECT_STOP_ALL\", stopSignFunc);\r\n      }\r\n\r\n      // Delay\r\n      const delay = opts.delay || 0;\r\n      const roundedDelay = Math.floor(delay);\r\n      for (let index = 0; index < roundedDelay; index++) {\r\n        recordElem.textContent = msg(\"starting-in\", { secs: roundedDelay - index });\r\n        await new Promise((resolve) => setTimeout(resolve, 975));\r\n      }\r\n      setTimeout(() => {\r\n        recordElem.textContent = msg(\"stop\");\r\n\r\n        recorder.start(1000);\r\n      }, (delay - roundedDelay) * 1000);\r\n    };\r\n    if (!recordElem) {\r\n      recordElem = Object.assign(document.createElement(\"div\"), {\r\n        className: \"sa-record \" + elem.className,\r\n        textContent: msg(\"record\"),\r\n      });\r\n      recordElem.addEventListener(\"click\", async () => {\r\n        if (isRecording) {\r\n          stopRecording();\r\n        } else {\r\n          const opts = await getOptions();\r\n          if (!opts) {\r\n            console.log(\"Canceled\");\r\n            return;\r\n          }\r\n          startRecording(opts);\r\n        }\r\n      });\r\n    }\r\n    elem.parentElement.appendChild(recordElem);\r\n  }\r\n};\r\n","// From https://github.com/LLK/scratch-gui/blob/develop/src/lib/download-blob.js\r\nexport default (filename, blob) => {\r\n  const downloadLink = document.createElement(\"a\");\r\n  document.body.appendChild(downloadLink);\r\n\r\n  // Use special ms version if available to get it working on Edge.\r\n  if (navigator.msSaveOrOpenBlob) {\r\n    navigator.msSaveOrOpenBlob(blob, filename);\r\n    return;\r\n  }\r\n\r\n  if (\"download\" in HTMLAnchorElement.prototype) {\r\n    const url = window.URL.createObjectURL(blob);\r\n    downloadLink.href = url;\r\n    downloadLink.download = filename;\r\n    downloadLink.type = blob.type;\r\n    downloadLink.click();\r\n    // remove the link after a timeout to prevent a crash on iOS 13 Safari\r\n    window.setTimeout(() => {\r\n      document.body.removeChild(downloadLink);\r\n      window.URL.revokeObjectURL(url);\r\n    }, 1000);\r\n  } else {\r\n    // iOS 12 Safari, open a new page and set href to data-uri\r\n    let popup = window.open(\"\", \"_blank\");\r\n    const reader = new FileReader();\r\n    reader.onloadend = function () {\r\n      popup.location.href = reader.result;\r\n      popup = null;\r\n    };\r\n    reader.readAsDataURL(blob);\r\n  }\r\n};\r\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AADA;AAIA;AAEA;AACA;AAFA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;AC/VA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;A","sourceRoot":""}