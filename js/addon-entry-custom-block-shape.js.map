{"version":3,"file":"js/addon-entry-custom-block-shape.js","sources":["webpack://GUI/./src/addons/addons/custom-block-shape/_runtime_entry.js","webpack://GUI/./src/addons/addons/custom-block-shape/userscript.js"],"sourcesContent":["/* generated by pull.js */\nimport _js from \"./userscript.js\";\nexport const resources = {\n  \"userscript.js\": _js,\n};\n","export default async function ({ addon, global, console }) {\r\n  var BlocklyInstance = await addon.tab.traps.getBlockly();\r\n\r\n  (function (Blockly) {\r\n    const BlockSvg = BlocklyInstance.BlockSvg;\r\n    var vm = addon.tab.traps.vm;\r\n\r\n    const { GRID_UNIT } = BlockSvg;\r\n    var multiplier;\r\n    var cornerSize;\r\n    var notchSize;\r\n\r\n    function updateAllBlocks() {\r\n      const workspace = Blockly.getMainWorkspace();\r\n      if (workspace) {\r\n        if (vm.editingTarget) {\r\n          vm.emitWorkspaceUpdate();\r\n        }\r\n        const flyout = workspace.getFlyout();\r\n        if (flyout) {\r\n          const flyoutWorkspace = flyout.getWorkspace();\r\n          Blockly.Xml.clearWorkspaceAndLoadFromXml(Blockly.Xml.workspaceToDom(flyoutWorkspace), flyoutWorkspace);\r\n          workspace.getToolbox().refreshSelection();\r\n          workspace.toolboxRefreshEnabled_ = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    function applyChanges() {\r\n      multiplier = addon.settings.get(\"paddingSize\") / 100;\r\n      cornerSize = addon.settings.get(\"cornerSize\") / 100;\r\n      notchSize = addon.settings.get(\"notchSize\") / 100;\r\n      BlockSvg.SEP_SPACE_Y = 2 * GRID_UNIT * multiplier;\r\n      BlockSvg.MIN_BLOCK_X = 16 * GRID_UNIT * multiplier;\r\n      BlockSvg.MIN_BLOCK_X_OUTPUT = 12 * GRID_UNIT * multiplier;\r\n      BlockSvg.MIN_BLOCK_X_SHADOW_OUTPUT = 10 * GRID_UNIT * multiplier;\r\n      BlockSvg.MIN_BLOCK_Y = 12 * GRID_UNIT * multiplier;\r\n      BlockSvg.EXTRA_STATEMENT_ROW_Y = 8 * GRID_UNIT * multiplier;\r\n      BlockSvg.MIN_BLOCK_X_WITH_STATEMENT = 40 * GRID_UNIT * multiplier;\r\n      BlockSvg.MIN_BLOCK_Y_SINGLE_FIELD_OUTPUT = 8 * GRID_UNIT * multiplier;\r\n      BlockSvg.MIN_BLOCK_Y_REPORTER = 10 * GRID_UNIT * multiplier;\r\n      BlockSvg.MIN_STATEMENT_INPUT_HEIGHT = 6 * GRID_UNIT * multiplier;\r\n      BlockSvg.NOTCH_WIDTH = 8 * GRID_UNIT * multiplier;\r\n      BlockSvg.NOTCH_HEIGHT = 2 * GRID_UNIT * multiplier * notchSize;\r\n      BlockSvg.NOTCH_START_PADDING = 3 * GRID_UNIT; //* multiplier\r\n      BlockSvg.ICON_SEPARATOR_HEIGHT = 10 * GRID_UNIT * multiplier;\r\n      BlockSvg.NOTCH_PATH_LEFT =\r\n        \"c 2,0 3,\" +\r\n        1 * notchSize +\r\n        \" 4,\" +\r\n        2 * notchSize +\r\n        \" l \" +\r\n        4 * multiplier * notchSize +\r\n        \",\" +\r\n        4 * multiplier * notchSize +\r\n        \" c 1,\" +\r\n        1 * notchSize +\r\n        \" 2,\" +\r\n        2 * notchSize +\r\n        \" 4,\" +\r\n        2 * notchSize +\r\n        \" h \" +\r\n        24 * (multiplier - 0.5) +\r\n        \" c 2,0 3,-\" +\r\n        1 * notchSize +\r\n        \" 4,-\" +\r\n        2 * notchSize +\r\n        \" l \" +\r\n        4 * multiplier * notchSize +\r\n        \",\" +\r\n        -4 * multiplier * notchSize +\r\n        \"c 1,-\" +\r\n        1 * notchSize +\r\n        \" 2,-\" +\r\n        2 * notchSize +\r\n        \" 4,-\" +\r\n        2 * notchSize;\r\n      BlockSvg.NOTCH_PATH_RIGHT =\r\n        \"h \" +\r\n        (-4 * (cornerSize - 1) - 5 * (1 - notchSize)) +\r\n        \"c -2,0 -3,\" +\r\n        1 * notchSize +\r\n        \" -4,\" +\r\n        2 * notchSize +\r\n        \" l \" +\r\n        -4 * multiplier * notchSize +\r\n        \",\" +\r\n        4 * multiplier * notchSize +\r\n        \" c -1,\" +\r\n        1 * notchSize +\r\n        \" -2,\" +\r\n        2 * notchSize +\r\n        \" -4,\" +\r\n        2 * notchSize +\r\n        \" h \" +\r\n        -24 * (multiplier - 0.5) +\r\n        \" c -2,0 -3,-\" +\r\n        1 * notchSize +\r\n        \" -4,-\" +\r\n        2 * notchSize +\r\n        \" l \" +\r\n        -4 * multiplier * notchSize +\r\n        \",\" +\r\n        -4 * multiplier * notchSize +\r\n        \"c -1,-\" +\r\n        1 * notchSize +\r\n        \" -2,-\" +\r\n        2 * notchSize +\r\n        \" -4,-\" +\r\n        2 * notchSize;\r\n      BlockSvg.INPUT_SHAPE_HEXAGONAL =\r\n        \"M \" +\r\n        4 * GRID_UNIT * multiplier +\r\n        \",0 \" +\r\n        \" h \" +\r\n        4 * GRID_UNIT +\r\n        \" l \" +\r\n        4 * GRID_UNIT * multiplier +\r\n        \",\" +\r\n        4 * GRID_UNIT * multiplier +\r\n        \" l \" +\r\n        -4 * GRID_UNIT * multiplier +\r\n        \",\" +\r\n        4 * GRID_UNIT * multiplier +\r\n        \" h \" +\r\n        -4 * GRID_UNIT +\r\n        \" l \" +\r\n        -4 * GRID_UNIT * multiplier +\r\n        \",\" +\r\n        -4 * GRID_UNIT * multiplier +\r\n        \" l \" +\r\n        4 * GRID_UNIT * multiplier +\r\n        \",\" +\r\n        -4 * GRID_UNIT * multiplier +\r\n        \" z\";\r\n      BlockSvg.INPUT_SHAPE_HEXAGONAL_WIDTH = 12 * GRID_UNIT * multiplier;\r\n      BlockSvg.INPUT_SHAPE_ROUND =\r\n        \"M \" +\r\n        4 * GRID_UNIT +\r\n        \",0\" +\r\n        \" h \" +\r\n        4 * GRID_UNIT +\r\n        \" a \" +\r\n        4 * GRID_UNIT +\r\n        \" \" +\r\n        4 * GRID_UNIT +\r\n        \" 0 0 1 0 \" +\r\n        8 * GRID_UNIT +\r\n        \" h \" +\r\n        -4 * GRID_UNIT +\r\n        \" a \" +\r\n        4 * GRID_UNIT +\r\n        \" \" +\r\n        4 * GRID_UNIT +\r\n        \" 0 0 1 0 -\" +\r\n        8 * GRID_UNIT +\r\n        \" z\";\r\n      BlockSvg.INPUT_SHAPE_ROUND_WIDTH = 12 * GRID_UNIT * multiplier;\r\n      BlockSvg.INPUT_SHAPE_HEIGHT = 8 * GRID_UNIT * multiplier;\r\n      BlockSvg.FIELD_HEIGHT = 8 * GRID_UNIT * multiplier; // NOTE: Determines string input heights\r\n      BlockSvg.FIELD_WIDTH = 6 * GRID_UNIT * Math.min(multiplier, 1) + 10 * GRID_UNIT * Math.max(multiplier - 1, 0);\r\n      BlockSvg.FIELD_DEFAULT_CORNER_RADIUS = 4 * GRID_UNIT * multiplier;\r\n      BlockSvg.EDITABLE_FIELD_PADDING = 1.5 * GRID_UNIT * multiplier;\r\n      BlockSvg.BOX_FIELD_PADDING = 2 * GRID_UNIT * multiplier;\r\n      BlockSvg.DROPDOWN_ARROW_PADDING = 2 * GRID_UNIT * multiplier;\r\n      BlockSvg.FIELD_WIDTH_MIN_EDIT = 8 * GRID_UNIT * multiplier;\r\n      BlockSvg.INPUT_AND_FIELD_MIN_X = 12 * GRID_UNIT * multiplier;\r\n      BlockSvg.INLINE_PADDING_Y = 1 * GRID_UNIT * multiplier; // For when reporters are inside reporters\r\n      BlockSvg.SHAPE_IN_SHAPE_PADDING[1][0] = 5 * GRID_UNIT * multiplier;\r\n      BlockSvg.SHAPE_IN_SHAPE_PADDING[1][2] = 5 * GRID_UNIT * multiplier;\r\n      BlockSvg.SHAPE_IN_SHAPE_PADDING[1][3] = 5 * GRID_UNIT * multiplier;\r\n\r\n      var originalDropdownObject = BlocklyInstance.FieldDropdown.prototype.positionArrow;\r\n      BlocklyInstance.FieldDropdown.prototype.positionArrow = function (x) {\r\n        this.arrowY_ = 11 * multiplier;\r\n        return originalDropdownObject.call(this, x);\r\n      };\r\n\r\n      //Corner setting\r\n      BlockSvg.CORNER_RADIUS = (1 * GRID_UNIT * addon.settings.get(\"cornerSize\")) / 100;\r\n\r\n      BlockSvg.TOP_LEFT_CORNER_START = \"m 0,\" + BlockSvg.CORNER_RADIUS;\r\n\r\n      BlockSvg.TOP_LEFT_CORNER =\r\n        \"A \" + BlockSvg.CORNER_RADIUS + \",\" + BlockSvg.CORNER_RADIUS + \" 0 0,1 \" + BlockSvg.CORNER_RADIUS + \",0\";\r\n\r\n      BlockSvg.TOP_RIGHT_CORNER =\r\n        \"a \" +\r\n        BlockSvg.CORNER_RADIUS +\r\n        \",\" +\r\n        BlockSvg.CORNER_RADIUS +\r\n        \" 0 0,1 \" +\r\n        BlockSvg.CORNER_RADIUS +\r\n        \",\" +\r\n        BlockSvg.CORNER_RADIUS;\r\n\r\n      BlockSvg.BOTTOM_RIGHT_CORNER =\r\n        \" a \" +\r\n        BlockSvg.CORNER_RADIUS +\r\n        \",\" +\r\n        BlockSvg.CORNER_RADIUS +\r\n        \" 0 0,1 -\" +\r\n        BlockSvg.CORNER_RADIUS +\r\n        \",\" +\r\n        BlockSvg.CORNER_RADIUS;\r\n\r\n      BlockSvg.BOTTOM_LEFT_CORNER =\r\n        \"a \" +\r\n        BlockSvg.CORNER_RADIUS +\r\n        \",\" +\r\n        BlockSvg.CORNER_RADIUS +\r\n        \" 0 0,1 -\" +\r\n        BlockSvg.CORNER_RADIUS +\r\n        \",-\" +\r\n        BlockSvg.CORNER_RADIUS;\r\n\r\n      BlockSvg.INNER_TOP_LEFT_CORNER =\r\n        \" a \" +\r\n        BlockSvg.CORNER_RADIUS +\r\n        \",\" +\r\n        BlockSvg.CORNER_RADIUS +\r\n        \" 0 0,0 -\" +\r\n        BlockSvg.CORNER_RADIUS +\r\n        \",\" +\r\n        BlockSvg.CORNER_RADIUS;\r\n\r\n      BlockSvg.INNER_BOTTOM_LEFT_CORNER =\r\n        \"a \" +\r\n        BlockSvg.CORNER_RADIUS +\r\n        \",\" +\r\n        BlockSvg.CORNER_RADIUS +\r\n        \" 0 0,0 \" +\r\n        BlockSvg.CORNER_RADIUS +\r\n        \",\" +\r\n        BlockSvg.CORNER_RADIUS;\r\n\r\n      BlockSvg.TOP_RIGHT_CORNER_DEFINE_HAT =\r\n        \"a \" +\r\n        BlockSvg.DEFINE_HAT_CORNER_RADIUS +\r\n        \",\" +\r\n        BlockSvg.DEFINE_HAT_CORNER_RADIUS +\r\n        \" 0 0,1 \" +\r\n        BlockSvg.DEFINE_HAT_CORNER_RADIUS +\r\n        \",\" +\r\n        BlockSvg.DEFINE_HAT_CORNER_RADIUS +\r\n        \" v \" +\r\n        (1 * GRID_UNIT - BlockSvg.CORNER_RADIUS);\r\n\r\n      BlockSvg.STATEMENT_INPUT_INNER_SPACE = 2.8 * GRID_UNIT - 0.9 * GRID_UNIT * cornerSize;\r\n    }\r\n\r\n    function applyAndUpdate() {\r\n      applyChanges();\r\n      updateAllBlocks();\r\n    }\r\n\r\n    addon.settings.addEventListener(\"change\", function () {\r\n      applyAndUpdate();\r\n    });\r\n\r\n    applyAndUpdate();\r\n  })(window.Blockly);\r\n}\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AA+BA;AAiCA;AAyBA;AACA;AAqBA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAUA;AAUA;AAUA;AAUA;AAUA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;A","sourceRoot":""}