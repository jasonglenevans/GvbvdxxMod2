{"version":3,"file":"js/addon-entry-columns.js","sources":["webpack://GUI/./src/addons/addons/columns/style.css","webpack://GUI/./src/addons/addons/columns/_runtime_entry.js","webpack://GUI/./src/addons/addons/columns/userscript.js"],"sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"[class*=\\\"blocks_blocks_\\\"] .blocklyToolboxDiv {\\r\\n  width: 310px;\\r\\n  height: auto !important;\\r\\n}\\r\\n\\r\\n.scratchCategoryMenu {\\r\\n  width: 100%;\\r\\n  columns: 2;\\r\\n  column-gap: 0.5rem;\\r\\n  padding: 0.25rem;\\r\\n}\\r\\n\\r\\n.scratchCategorySecondMenu {\\r\\n  columns: 1;\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(2, 1fr);\\r\\n  padding-bottom: 2.25rem;\\r\\n}\\r\\n\\r\\n.scratchCategorySecondMenu:empty {\\r\\n  padding-top: 0;\\r\\n  padding-bottom: 2rem;\\r\\n}\\r\\n\\r\\n.scratchCategoryMenuItem {\\r\\n  display: inline-flex; /* inline so that it isn't split between both columns */\\r\\n  width: 100%;\\r\\n  padding: 0.25rem;\\r\\n  border-radius: 0.875rem;\\r\\n}\\r\\n\\r\\n.scratchCategoryItemBubble,\\r\\n.scratchCategoryItemIcon {\\r\\n  margin: 0;\\r\\n  margin-inline-end: 0.5rem;\\r\\n}\\r\\n\\r\\n.scratchCategoryMenuItemLabel {\\r\\n  flex: 1;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n[class*=\\\"gui_extension-button-container_\\\"] {\\r\\n  top: var(--sa-add-extension-button-y);\\r\\n  bottom: auto;\\r\\n  margin-inline-start: 0.5rem;\\r\\n  width: calc(308px - 1rem);\\r\\n  height: calc(1.75rem - 2px);\\r\\n  background-color: transparent;\\r\\n  border-color: var(--ui-black-transparent, rgba(0, 0, 0, 0.15));\\r\\n  border-radius: 0.25rem;\\r\\n}\\r\\n\\r\\n[class*=\\\"gui_extension-button-container_\\\"]:hover {\\r\\n  background-color: var(--ui-tertiary, white);\\r\\n}\\r\\n\\r\\n[class*=\\\"gui_extension-button-container_\\\"]::before {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n[class*=\\\"gui_extension-button_\\\"] {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  padding-inline: 0;\\r\\n}\\r\\n\\r\\n[class*=\\\"gui_extension-button-icon_\\\"] {\\r\\n  filter: var(--editorDarkMode-categoryMenu-invertedFilter, brightness(0.4));\\r\\n}\\r\\n\\r\\n[class*=\\\"gui_extension-button-container_\\\"]:hover [class*=\\\"gui_extension-button-icon_\\\"] {\\r\\n  filter: var(--editorDarkMode-accent-invertedFilter, brightness(0.4));\\r\\n}\\r\\n[theme=\\\"dark\\\"] [class*=\\\"gui_extension-button-icon_\\\"] {\\r\\n  filter: none !important;\\r\\n}\\r\\n\\r\\n.sa-add-extension-label {\\r\\n  color: var(--text-primary, #575e75);\\r\\n  font-size: 0.65rem;\\r\\n}\\r\\n\\r\\n[class*=\\\"gui_extension-button-container_\\\"]:hover .sa-add-extension-label {\\r\\n  color: var(--text-primary, #575e75);\\r\\n  font-size: 0.65rem;\\r\\n}\\r\\n\\r\\n/* hide-flyout compatibility */\\r\\n\\r\\n.blocklyFlyout.sa-flyoutClose {\\r\\n  transform: translate(-320px, var(--sa-flyout-y)) !important;\\r\\n}\\r\\n\\r\\n.blocklyFlyoutScrollbar.sa-flyoutClose {\\r\\n  transform: translate(-25px, calc(var(--sa-flyout-y) + 2.5px)) !important;\\r\\n}\\r\\n\\r\\n.sa-lock-image.sa-flyoutClose {\\r\\n  transform: translateX(-320px);\\r\\n}\\r\\n\\r\\n.sa-flyout-placeHolder {\\r\\n  left: 0;\\r\\n  top: calc(var(--sa-flyout-y) + 44px);\\r\\n  width: 311px;\\r\\n}\\r\\n\\r\\n.sa-lock-image {\\r\\n  top: calc(var(--sa-flyout-y) + 46px);\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n","/* generated by pull.js */\nimport _js from \"./userscript.js\";\nimport _css from \"!css-loader!./style.css\";\nexport const resources = {\n  \"userscript.js\": _js,\n  \"style.css\": _css,\n};\n","export default async function ({ addon, msg, global, console }) {\r\n  const Blockly = await addon.tab.traps.getBlockly();\r\n\r\n  // https://github.com/LLK/scratch-blocks/blob/893c7e7ad5bfb416eaed75d9a1c93bdce84e36ab/core/toolbox.js#L235\r\n  const _ToolboxPosition = Blockly.Toolbox.prototype.position;\r\n  Blockly.Toolbox.prototype.position = function () {\r\n    _ToolboxPosition.call(this);\r\n\r\n    // Update flyout position when category menu height changes.\r\n    if (this.HtmlDiv && !this.HtmlDiv._observer) {\r\n      this.HtmlDiv._observer = new ResizeObserver(() => {\r\n        this.flyout_.position();\r\n      });\r\n      this.HtmlDiv._observer.observe(this.HtmlDiv);\r\n    }\r\n  };\r\n\r\n  // https://github.com/LLK/scratch-blocks/blob/893c7e7ad5bfb416eaed75d9a1c93bdce84e36ab/core/flyout_vertical.js#L314\r\n  const _VerticalFlyoutPosition = Blockly.VerticalFlyout.prototype.position;\r\n  Blockly.VerticalFlyout.prototype.position = function () {\r\n    _VerticalFlyoutPosition.call(this);\r\n    if (addon.self.disabled || !this.isVisible()) {\r\n      return;\r\n    }\r\n    var targetWorkspaceMetrics = this.targetWorkspace_.getMetrics();\r\n    if (!targetWorkspaceMetrics) {\r\n      // Hidden components will return null.\r\n      return;\r\n    }\r\n\r\n    // In RTL, subtract the total width of left and right workspace borders and the category menu border\r\n    // from the workspace width.\r\n    var x = this.toolboxPosition_ === Blockly.TOOLBOX_AT_RIGHT ? targetWorkspaceMetrics.viewWidth - 3 : 0;\r\n    var y = this.parentToolbox_.HtmlDiv.offsetHeight;\r\n\r\n    // Addon sets the width of the flyout to the width of the toolbox.\r\n    this.width_ = this.parentToolbox_.getWidth();\r\n    this.height_ = Math.max(0, targetWorkspaceMetrics.viewHeight - y);\r\n\r\n    this.setBackgroundPath_(this.width_, this.height_);\r\n\r\n    this.svgGroup_.setAttribute(\"width\", this.width_);\r\n    this.svgGroup_.setAttribute(\"height\", this.height_);\r\n    var transform = \"translate(\" + x + \"px,\" + y + \"px)\";\r\n    Blockly.utils.setCssTransform(this.svgGroup_, transform);\r\n\r\n    // Update the scrollbar (if one exists).\r\n    if (this.scrollbar_) {\r\n      // Set the scrollbars origin to be the top left of the flyout.\r\n      this.scrollbar_.setOrigin(\r\n        x + (this.toolboxPosition_ === Blockly.TOOLBOX_AT_RIGHT ? 0 : this.width_ - this.getWidth()),\r\n        y\r\n      );\r\n      this.scrollbar_.resize();\r\n    }\r\n\r\n    // Set CSS variables for the userstyle.\r\n    const container = this.svgGroup_.closest(\"[class*='gui_tab-panel_']\");\r\n    container.style.setProperty(\"--sa-add-extension-button-y\", `${y - 33}px`);\r\n    container.parentElement.style.setProperty(\"--sa-flyout-y\", `${y}px`);\r\n  };\r\n\r\n  // https://github.com/LLK/scratch-blocks/blob/893c7e7ad5bfb416eaed75d9a1c93bdce84e36ab/core/flyout_base.js#L370\r\n  const _VerticalFlyoutGetWidth = Blockly.VerticalFlyout.prototype.getWidth;\r\n  Blockly.VerticalFlyout.prototype.getWidth = function () {\r\n    // In RTL, this will be called by Blockly to position blocks inside the flyout.\r\n    let width = _VerticalFlyoutGetWidth.call(this);\r\n    if (!addon.self.disabled) width += 60;\r\n    return width;\r\n  };\r\n\r\n  // https://github.com/LLK/scratch-blocks/blob/893c7e7ad5bfb416eaed75d9a1c93bdce84e36ab/core/toolbox.js#L595\r\n  const _CategoryMenuCreateDom = Blockly.Toolbox.CategoryMenu.prototype.createDom;\r\n  Blockly.Toolbox.CategoryMenu.prototype.createDom = function () {\r\n    _CategoryMenuCreateDom.call(this);\r\n    if (addon.self.disabled) return;\r\n    this.secondTable = document.createElement(\"div\");\r\n    this.secondTable.className =\r\n      \"scratchCategorySecondMenu \" +\r\n      (this.parent_.horizontalLayout_ ? \"scratchCategoryMenuHorizontal\" : \"scratchCategoryMenu\");\r\n    this.parentHtml_.appendChild(this.secondTable);\r\n  };\r\n\r\n  // https://github.com/LLK/scratch-blocks/blob/893c7e7ad5bfb416eaed75d9a1c93bdce84e36ab/core/toolbox.js#L606\r\n  const _CategoryMenuPopulate = Blockly.Toolbox.CategoryMenu.prototype.populate;\r\n  Blockly.Toolbox.CategoryMenu.prototype.populate = function (domTree) {\r\n    if (!domTree) return;\r\n\r\n    const Categories = [\r\n      \"motion\",\r\n      \"looks\",\r\n      \"sound\",\r\n      \"events\",\r\n      \"control\",\r\n      \"sensing\",\r\n      \"operators\",\r\n      \"variables\",\r\n      \"lists\",\r\n      \"myBlocks\",\r\n    ];\r\n    const extensionsNodes = [];\r\n    const extensionTree = domTree.cloneNode(true);\r\n    if (!addon.self.disabled) {\r\n      extensionTree.childNodes.forEach((child) => {\r\n        if (child.tagName === \"category\" && !Categories.includes(child.id)) {\r\n          extensionsNodes.push(child.cloneNode(true));\r\n          child.remove();\r\n        }\r\n      });\r\n    }\r\n    _CategoryMenuPopulate.call(this, extensionTree);\r\n    for (const child of extensionsNodes) {\r\n      const row = document.createElement(\"div\");\r\n      row.className = \"scratchCategoryMenuRow\";\r\n      this.secondTable.appendChild(row);\r\n      if (child) {\r\n        this.categories_.push(new Blockly.Toolbox.Category(this, row, child));\r\n      }\r\n    }\r\n    if (!addon.self.disabled) {\r\n      this.height_ = this.table.offsetHeight + this.secondTable.offsetHeight;\r\n    }\r\n  };\r\n\r\n  // https://github.com/LLK/scratch-blocks/blob/893c7e7ad5bfb416eaed75d9a1c93bdce84e36ab/core/toolbox.js#L639\r\n  const _CategoryMenuDispose = Blockly.Toolbox.CategoryMenu.prototype.dispose;\r\n  Blockly.Toolbox.CategoryMenu.prototype.dispose = function () {\r\n    _CategoryMenuDispose.call(this);\r\n    if (this.secondTable) {\r\n      this.secondTable.remove();\r\n      this.secondTable = null;\r\n    }\r\n  };\r\n\r\n  function updateToolbox() {\r\n    const workspace = Blockly.getMainWorkspace();\r\n    const toolbox = workspace.getToolbox();\r\n    if (!toolbox) return;\r\n    const categoryMenu = toolbox.categoryMenu_;\r\n    if (!categoryMenu) return;\r\n\r\n    // Scratch may have already updated the toolbox for us, so no need to update it again.\r\n    if (categoryMenu.secondTable && !addon.self.disabled) return;\r\n    // Must dispose and createDom the category menu so we can run our polluted commands.\r\n    categoryMenu.dispose();\r\n    categoryMenu.createDom();\r\n    // Repopulate the category menu since we've just disposed it.\r\n    toolbox.populate_(workspace.options.languageTree);\r\n    // Reposition the toolbox, since it's likely our addon moved it.\r\n    toolbox.position();\r\n  }\r\n\r\n  updateToolbox();\r\n  addon.self.addEventListener(\"disabled\", updateToolbox);\r\n  addon.self.addEventListener(\"reenabled\", updateToolbox);\r\n\r\n  while (true) {\r\n    const addExtensionButton = await addon.tab.waitForElement(\"[class*='gui_extension-button_']\", {\r\n      markAsSeen: true,\r\n      reduxEvents: [\"scratch-gui/mode/SET_PLAYER\", \"fontsLoaded/SET_FONTS_LOADED\", \"scratch-gui/locales/SELECT_LOCALE\"],\r\n      condition: () => !addon.tab.redux.state.scratchGui.mode.isPlayerOnly,\r\n    });\r\n    const addExtensionLabel = Object.assign(document.createElement(\"span\"), {\r\n      className: \"sa-add-extension-label\",\r\n      innerText: addon.tab.scratchMessage(\"gui.gui.addExtension\"),\r\n    });\r\n    addon.tab.displayNoneWhileDisabled(addExtensionLabel);\r\n    addExtensionButton.appendChild(addExtensionLabel);\r\n    addExtensionButton.removeAttribute(\"title\");\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAYA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}