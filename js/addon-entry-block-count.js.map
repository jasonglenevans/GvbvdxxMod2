{"version":3,"file":"js/addon-entry-block-count.js","sources":["webpack://GUI/./src/addons/addons/block-count/_runtime_entry.js","webpack://GUI/./src/addons/addons/block-count/blockcount.js"],"sourcesContent":["/* generated by pull.js */\nimport _js from \"./blockcount.js\";\nexport const resources = {\n  \"blockcount.js\": _js,\n};\n","export default async function ({ addon, console, msg }) {\r\n  const vm = addon.tab.traps.vm;\r\n\r\n  const getBlockCount = () => {\r\n    let blockCount = 0;\r\n    let scriptCount = 0;\r\n    let sprites = new Set(vm.runtime.targets.map((i) => i.sprite.blocks._blocks));\r\n    sprites.forEach((sprite, i) => {\r\n      scriptCount += Object.values(sprite).filter((o) => !o.parent).length; // Filter blocks that don't have a parent (meaning it's the top of a stack)\r\n      blockCount += Object.values(sprite).filter((o) => !o.shadow).length; // shadow blocks should be filtered out\r\n    });\r\n    return {\r\n      blockCount,\r\n      scriptCount,\r\n      spriteCount: sprites.size - 1, // Backdrop counts as a target so we can subtract it\r\n    };\r\n  };\r\n\r\n  const addLiveBlockCount = async () => {\r\n    if (vm.editingTarget) {\r\n      let handler = null;\r\n      while (true) {\r\n        const topBar = await addon.tab.waitForElement(\"[class^='menu-bar_main-menu']\", {\r\n          markAsSeen: true,\r\n          reduxEvents: [\r\n            \"scratch-gui/mode/SET_PLAYER\",\r\n            \"fontsLoaded/SET_FONTS_LOADED\",\r\n            \"scratch-gui/locales/SELECT_LOCALE\",\r\n          ],\r\n          reduxCondition: (state) => !state.scratchGui.mode.isPlayerOnly,\r\n        });\r\n        let display = topBar.appendChild(document.createElement(\"span\"));\r\n        display.style.order = 1;\r\n        display.style.padding = \"9px\";\r\n        display.innerText = msg(\"blocks\", { num: getBlockCount().blockCount });\r\n        let debounce; // debouncing values because of the way 'PROJECT_CHANGED' works\r\n        if (handler) {\r\n          vm.off(\"PROJECT_CHANGED\", handler);\r\n          vm.runtime.off(\"PROJECT_LOADED\", handler);\r\n        }\r\n        handler = async () => {\r\n          clearTimeout(debounce);\r\n          debounce = setTimeout(async () => {\r\n            display.innerText = msg(\"blocks\", { num: getBlockCount().blockCount });\r\n          }, 1000);\r\n        };\r\n        vm.on(\"PROJECT_CHANGED\", handler);\r\n        vm.runtime.on(\"PROJECT_LOADED\", handler);\r\n      }\r\n    } else {\r\n      let timeout = setTimeout(function () {\r\n        addLiveBlockCount();\r\n        clearTimeout(timeout);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  addLiveBlockCount();\r\n}\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAKA;AAPA;AASA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}